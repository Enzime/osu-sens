{"version":3,"sources":["util.js","display.js","math.js","tablets.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","AspectRatioBox","props","unscaled","size","setScalingFactor","padding","horizontal","vertical","style","border","browser","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","widthRatio","heightRatio","scalingFactor","Math","max","div","round","children","BoundForm","data","values","setValues","inputs","handleChange","e","target","name","Number","value","checkValidity","setter","field","schema","push","key","label","type","min","step","disabled","onChange","ManagedRnd","cssSize","w","h","onDrag","x","y","handleDrag","onDragStop","onResize","direction","ref","delta","cssWidth","cssHeight","slice","onResizeStop","bounds","default","position","VariableDisplay","contents","prop","DesktopDisplay","screen","subscreen","setSubscreen","setSubscreenImage","subscreenImage","handleNewWindowImage","img","Image","crossOrigin","src","image","offscreen","document","createElement","ctx","getContext","onload","drawImage","toBlob","blob","URL","createObjectURL","rndPosToAbs","marginLeft","backgroundImage","backgroundSize","TabletDisplay","tablet","projection","setProjection","rndPos","rndSize","MatrixCommand","matrix","command","setCommand","matrixString","scaleX","offsetX","scaleY","offsetY","onClick","navigator","clipboard","writeText","alert","role","aria-label","contentEditable","suppressContentEditableWarning","spellCheck","onBlur","innerText","onKeyPress","preventDefault","MatrixForm","updateProjection","formValues","setFormValues","overrideValues","setOverrideValues","newFormValues","reportValidity","newMatrix","isNaN","startsWith","element","htmlFor","id","pattern","required","SensitivityForm","sensitivity","newSensitivity","axis","toUpperCase","TabletMath","setMatrix","setSensitivity","playArea","calculatePlayArea","op_per_sx","op_per_sy","sx_per_tx","sy_per_ty","tx_per_mm","pw","ty_per_mm","ph","mm_per_tx","mm_per_ty","mmX","mmY","TABLET_DATA","TabletSelector","setTablet","model","setModel","options","tablet_model","tabletModel","selectedOptions","tabletData","hScalingFactor","vScalingFactor","ScreenshotSelector","setImage","url","files","ReactDOM","render","setScreen","className","open","getElementById"],"mappings":"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","file":"static/js/main.444bbd15.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Rnd } from 'react-rnd';\n\n// taken from: https://stackoverflow.com/a/36862446\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return { width, height };\n}\n\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  // pass in empty array to ensure this effect only runs once\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nexport function AspectRatioBox(props) {\n  const { size: unscaled, setScalingFactor } = props;\n  const { padding={horizontal: 0, vertical: 0}, style={border: '1px solid'} } = props;\n\n  const browser = useWindowDimensions();\n\n  const widthRatio = unscaled.width / (browser.width - padding.horizontal);\n  const heightRatio = unscaled.height / (browser.height - padding.vertical);\n  const scalingFactor = Math.max(1, widthRatio, heightRatio);\n  const div = { width: Math.round(unscaled.width / scalingFactor), height: Math.round(unscaled.height / scalingFactor) };\n\n  useEffect(() => {\n    setScalingFactor(scalingFactor);\n  }, [scalingFactor, setScalingFactor]);\n\n  return (\n    <div style={{...style, ...div}}>\n      {props.children}\n    </div>\n  );\n}\n\nexport function BoundForm(props) {\n  const [values, setValues] = useState(props.data);\n\n  useEffect(() => setValues(props.data), [props.data]);\n\n  let inputs = [];\n\n  function handleChange(e) {\n    setValues({...values, [e.target.name]: Number(e.target.value)});\n\n    if (e.target.checkValidity()) {\n      props.setter({...props.data, [e.target.name]: Number(e.target.value)});\n    }\n  }\n\n  for (const field in props.data) {\n    if (props.schema[field] === 'ignore')\n      continue;\n\n    inputs.push(\n      <label key={field}>\n        {props.schema[field].label || field}: <input type=\"number\" name={field} value={values[field]} min={props.schema[field].min} max={props.schema[field].max} step={props.schema[field].step} disabled={props.schema[field].disabled} onChange={handleChange} />\n      </label>\n    );\n  }\n\n  return <form>{inputs}</form>;\n}\nexport function ManagedRnd(props) {\n  const { style={border: '1px solid'} } = props;\n\n  function handleDrag(e, {x, y}) {\n    props.handleDrag({x, y});\n  }\n\n  function handleResize(e, direction, ref, delta, {x, y}) {\n    let { width: cssWidth, height: cssHeight } = ref.style;\n\n    props.handleResize({\n      x: x,\n      y: y,\n      w: Number(cssWidth.slice(0, -1)) / 100,\n      h: Number(cssHeight.slice(0, -1)) / 100\n    });\n  }\n\n  // convert size to CSS\n  const {size} = props;\n\n  const cssSize = {\n    width: `${size.w * 100}%`,\n    height: `${size.h * 100}%`\n  };\n\n  return (\n    <Rnd\n      onDrag={handleDrag}\n      onDragStop={props.onDragStop}\n      onResize={handleResize}\n      onResizeStop={props.onResizeStop}\n      bounds={props.bounds}\n      default={{\n        x: 0,\n        y: 0,\n        width: '50%',\n        height: '50%'\n      }}\n      size={cssSize}\n      position={props.position}\n      style={style}\n    >\n      {props.children}\n    </Rnd>\n  );\n}\n\nexport function VariableDisplay(props) {\n  let contents = '';\n\n  for (const prop in props) {\n    contents += `${prop}: ${props[prop]} `;\n  }\n\n  return <div>{contents}</div>;\n}\n\n// vim: ts=2:sw=2:et\n","import React, { useEffect, useState } from 'react';\n\nimport { AspectRatioBox, ManagedRnd } from './util';\n\nexport function DesktopDisplay({screen, subscreen, setSubscreen, subscreenImage, setSubscreenImage}) {\n  const [scalingFactor, setScalingFactor] = useState(1);\n\n  function handleNewWindowImage() {\n    let img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.src = screen.image;\n\n    let offscreen = document.createElement('canvas');\n    offscreen.width = subscreen.w;\n    offscreen.height = subscreen.h;\n    let ctx = offscreen.getContext('2d');\n\n    img.onload = () => {\n      ctx.drawImage(img, subscreen.x, subscreen.y, subscreen.w, subscreen.h, 0, 0, subscreen.w, subscreen.h);\n      offscreen.toBlob((blob) => {\n        setSubscreenImage(URL.createObjectURL(blob));\n      });\n    };\n  }\n\n  useEffect(handleNewWindowImage, [screen.image]);\n\n  const position = {x: Math.round(subscreen.x / scalingFactor), y: Math.round(subscreen.y / scalingFactor)};\n  const size = {w: subscreen.w / screen.w, h: subscreen.h / screen.h};\n\n  function rndPosToAbs(x, y) {\n    return {\n      x: Math.round(x * scalingFactor),\n      y: Math.round(y * scalingFactor)\n    };\n  }\n\n  function handleDrag({x, y}) {\n    setSubscreen({...subscreen, ...rndPosToAbs(x, y)});\n  }\n\n  function handleResize({x, y, w, h}) {\n    setSubscreen({\n      ...rndPosToAbs(x, y),\n      w: Math.round(w * screen.w),\n      h: Math.round(h * screen.h)\n    });\n  }\n\n  return (\n    <AspectRatioBox\n      size={{width: screen.w, height: screen.h}}\n      padding={{vertical: 0, horizontal: 20}}\n      style={{\n        position: 'relative',\n        marginLeft: '10px',\n        backgroundImage: `url(${screen.image})`,\n        backgroundSize: '100% 100%'\n      }}\n      setScalingFactor={setScalingFactor}\n    >\n      <ManagedRnd\n        bounds=\"parent\"\n        onDragStop={handleNewWindowImage}\n        onResizeStop={handleNewWindowImage}\n        position={position}\n        size={size}\n        handleDrag={handleDrag}\n        handleResize={handleResize}\n      />\n    </AspectRatioBox>\n  );\n}\n\nexport function TabletDisplay({subscreenImage, tablet, projection, setProjection}) {\n  const [scalingFactor, setScalingFactor] = useState(1);\n\n  function rndPosToAbs(x, y) {\n    return {\n      x: Math.round(x * scalingFactor),\n      y: Math.round(y * scalingFactor)\n    };\n  }\n\n  function handleDrag({x, y}) {\n    // Drag and resize events from react-rnd emit different positions for the\n    // same spot, this is most likely a result of the bounding parent having\n    // a border which is probably inconsistently accounted for. Workaround this\n    // for now.\n    setProjection({...projection, ...rndPosToAbs(x + 1, y + 1)});\n  }\n\n  function handleResize({x, y, w, h}) {\n    setProjection({\n      ...rndPosToAbs(x - 1, y - 1),\n      w: Math.round(w * tablet.w),\n      h: Math.round(h * tablet.h)\n    });\n  }\n\n  const rndPos = {\n    x: Math.round(projection.x / scalingFactor) + 1,\n    y: Math.round(projection.y / scalingFactor) + 1\n  };\n\n  const rndSize = {\n    w: projection.w / tablet.w,\n    h: projection.h / tablet.h\n  };\n\n  return (\n    <AspectRatioBox\n      size={{width: tablet.w, height: tablet.h}}\n      padding={{vertical: 0, horizontal: 20}}\n      style={{\n        border: '1px solid',\n        position: 'relative',\n        marginLeft: '10px'\n      }}\n      setScalingFactor={setScalingFactor}\n    >\n      <ManagedRnd\n        size={rndSize}\n        position={rndPos}\n        handleDrag={handleDrag}\n        handleResize={handleResize}\n        style={{\n          backgroundImage: `url(${subscreenImage})`,\n          backgroundSize: '100% 100%'\n        }}\n      />\n    </AspectRatioBox>\n  );\n}\n\n// vim: ts=2:sw=2:et\n","import React, { useEffect, useState } from 'react';\n\nimport { VariableDisplay } from './util';\n\nfunction calculatePlayArea({x, y, w, h}) {\n  if (w === 1366 && h === 768) {\n    return {\n      x: x + 273,\n      y: y + 89,\n      w: 820,\n      h: 615\n    }\n  } else if (w === 1920 && h === 1080) {\n    return {\n      x: x + 280,\n      y: y + 123,\n      w: 1152,\n      h: 864\n    }\n  }\n}\n\nfunction MatrixCommand({matrix}) {\n  const [command, setCommand] = useState(\n    'xinput set-prop \"Wacom One by Wacom S Pen\" \"Coordinate Transformation Matrix\" '\n  );\n\n  function handleBlur(e) {\n    setCommand(e.target.innerText);\n  }\n\n  function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n    }\n  }\n\n  const matrixString = `${matrix.scaleX} 0 ${matrix.offsetX} 0 ${matrix.scaleY} ${matrix.offsetY} 0 0 1`;\n\n  function handleClick() {\n    navigator.clipboard.writeText(`${command}${matrixString}`);\n    alert('Copied command to clipboard');\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}>\n        <span role=\"img\" aria-label=\"Copy to Clipboard\">\n          📋\n        </span>\n      </button>\n      <pre>\n        <span\n          contentEditable={true}\n          suppressContentEditableWarning={true}\n          spellCheck={false}\n          onBlur={handleBlur}\n          onKeyPress={handleKeyPress}\n        >\n          {command}\n        </span>\n        {matrixString}\n      </pre>\n    </div>\n  );\n}\n\nfunction MatrixForm({matrix, updateProjection}) {\n  const [formValues, setFormValues] = useState({\n    scaleX: 1,\n    scaleY: 1,\n    offsetX: 0,\n    offsetY: 0\n  });\n\n  const [overrideValues, setOverrideValues] = useState(false);\n\n  useEffect(() => {\n    if (overrideValues) {\n      setFormValues(matrix);\n    } else {\n      setOverrideValues(true);\n    }\n  }, [matrix]);\n\n  let inputs = [];\n\n  function handleChange(e) {\n    setOverrideValues(false);\n\n    const newFormValues = {...matrix, [e.target.name]: e.target.value};\n    setFormValues(newFormValues);\n\n    if (e.target.reportValidity()) {\n      let newMatrix = {...matrix};\n\n      for (const field in newFormValues) {\n        if (newFormValues[field] && !isNaN(newFormValues[field])) {\n          if (!field.startsWith('scale') || (field.startsWith('scale') && Number(newFormValues[field]) !== 0)) {\n            newMatrix[field] = newFormValues[field];\n          }\n        }\n      }\n\n      updateProjection(newMatrix);\n    }\n  }\n\n  for (const element in matrix) {\n    inputs.push(\n      <span key={element}>\n        <label htmlFor={element}>{element}: </label>\n        <input\n          type=\"text\"\n          name={element}\n          id={element}\n          value={formValues[element]}\n          onChange={handleChange}\n          pattern={element.startsWith('scale') ? \"(0\\\\.\\\\d*[1-9]|[1-9]\\\\d*(\\\\.\\\\d+)?)\" : \"-?[0-9]*\\\\.?[0-9]+\"}\n          required={true}\n        />\n      </span>\n    );\n  }\n\n  return (\n    <form>\n      {inputs}\n    </form>\n  );\n}\n\nfunction SensitivityForm({sensitivity, updateProjection}) {\n  const [formValues, setFormValues] = useState({x: 0, y: 0});\n\n  const [overrideValues, setOverrideValues] = useState(false);\n\n  useEffect(() => {\n    if (overrideValues) {\n      setFormValues(sensitivity);\n    } else {\n      setOverrideValues(true);\n    }\n  }, [sensitivity]);\n\n  let inputs = [];\n\n  function handleChange(e) {\n    setOverrideValues(false);\n\n    const newFormValues = {...sensitivity, [e.target.name]: e.target.value};\n    setFormValues(newFormValues);\n\n    if (e.target.reportValidity()) {\n      let newSensitivity = {...sensitivity};\n\n      for (const field in newFormValues) {\n        newSensitivity[field] = Number(newFormValues[field]);\n      }\n\n      updateProjection(newSensitivity);\n    }\n  }\n\n  for (const axis in sensitivity) {\n    inputs.push(\n      <span key={axis}>\n        <label htmlFor={axis}>sens{axis.toUpperCase()}: </label>\n        <input\n          type=\"text\"\n          name={axis}\n          id={axis}\n          value={formValues[axis] === 0 ? \"undefined\" : formValues[axis]}\n          onChange={handleChange}\n          pattern={\"0\\\\.\\\\d*[1-9]|[1-9]\\\\d*(\\\\.\\\\d+)?\"}\n          required={true}\n          disabled={sensitivity[axis] === 0}\n        />\n      </span>\n    );\n  }\n\n  return (\n    <form>\n      {inputs}\n    </form>\n  );\n}\n\nexport function TabletMath({screen, subscreen, tablet, projection, setProjection}) {\n  const [matrix, setMatrix] = useState({scaleX: 1, scaleY: 1, offsetX: 0, offsetY: 0});\n  const [sensitivity, setSensitivity] = useState({x: 0, y: 0});\n\n  useEffect(() => {\n    // calculate coordinate transformation matrix elements\n    const scaleX = (subscreen.w / screen.w) * tablet.w / projection.w;\n    const scaleY = (subscreen.h / screen.h) * tablet.h / projection.h;\n    const offsetX = -(projection.x / tablet.w) * scaleX + (subscreen.x / screen.w);\n    const offsetY = -(projection.y / tablet.h) * scaleY + (subscreen.y / screen.h);\n\n    setMatrix({scaleX, scaleY, offsetX, offsetY});\n\n    const playArea = calculatePlayArea(subscreen);\n\n    if (playArea) {\n      // osu!pixels per screen pixel (op/sp)\n      const op_per_sx = 512 / playArea.w;\n      const op_per_sy = 384 / playArea.h;\n\n      // screen pixels per tablet pixel (sp/tp)\n      const sx_per_tx = subscreen.w / projection.w;\n      const sy_per_ty = subscreen.h / projection.h;\n\n      // tablet pixels per mm (tp/mm)\n      const tx_per_mm = tablet.w / tablet.pw;\n      const ty_per_mm = tablet.h / tablet.ph;\n\n      // sensitivity = osu!pixels per mm\n      setSensitivity({\n        x: op_per_sx * sx_per_tx * tx_per_mm,\n        y: op_per_sy * sy_per_ty * ty_per_mm\n      });\n    } else {\n      setSensitivity({x: 0, y: 0});\n    }\n  }, [screen, subscreen, tablet, projection]);\n\n  function updateProjectionFromCTM(newMatrix) {\n    setProjection({\n      x: Math.round((tablet.w / newMatrix.scaleX) * (subscreen.x / screen.w - newMatrix.offsetX)),\n      y: Math.round((tablet.h / newMatrix.scaleY) * (subscreen.y / screen.h - newMatrix.offsetY)),\n      w: Math.round((subscreen.w / screen.w) * tablet.w / newMatrix.scaleX),\n      h: Math.round((subscreen.h / screen.h) * tablet.h / newMatrix.scaleY)\n    });\n  }\n\n  function updateProjectionFromSensitivity(newSensitivity) {\n    setProjection({\n      ...projection,\n      w: Math.round(projection.w * sensitivity.x / newSensitivity.x),\n      h: Math.round(sensitivity.y * projection.h / newSensitivity.y)\n    });\n  }\n\n  // distance per tablet pixel (mm/tp)\n  const mm_per_tx = tablet.pw / tablet.w;\n  const mm_per_ty = tablet.ph / tablet.h;\n\n  const mmX = mm_per_tx * projection.w;\n  const mmY = mm_per_ty * projection.h;\n\n  return (\n    <div>\n      <MatrixForm\n        matrix={matrix}\n        updateProjection={updateProjectionFromCTM}\n      />\n      <VariableDisplay mmX={mmX} mmY={mmY} />\n      <SensitivityForm\n        sensitivity={sensitivity}\n        updateProjection={updateProjectionFromSensitivity}\n      />\n      <MatrixCommand matrix={matrix} />\n    </div>\n  );\n}\n\n// vim: ts=2:sw=2:et\n","import React, { useState } from 'react';\n\nimport { BoundForm } from './util';\n\nconst TABLET_DATA = {\n  'CTL-472': {\n    name: 'One by Wacom (CTL-472)',\n    data: {\n      w: 15200,\n      h: 9500,\n      pw: 152,\n      ph: 95\n    }\n  },\n  'Huion-420': {\n    name: 'Huion 420/osu!tablet',\n    data: {\n      w: 8340,\n      h: 4680,\n      pw: 105.918,\n      ph: 59.436\n    }\n  }\n};\n\nexport function TabletSelector({tablet, setTablet, projection, setProjection}) {\n  const [model, setModel] = useState('CTL-472');\n\n  function handleChange(e) {\n    const tabletModel = e.target.selectedOptions[0].value;\n\n    setModel(tabletModel);\n\n    if (tabletModel !== 'custom') {\n      const tabletData = TABLET_DATA[tabletModel].data;\n      const hScalingFactor = tabletData.w / tablet.w;\n      const vScalingFactor = tabletData.h / tablet.h;\n\n      setTablet(tabletData);\n      setProjection({\n        x: Math.round(projection.x * hScalingFactor),\n        y: Math.round(projection.y * vScalingFactor),\n        w: Math.round(projection.w * hScalingFactor),\n        h: Math.round(projection.h * vScalingFactor)\n      });\n    }\n  }\n\n  let options = [];\n\n  for (const tablet_model in TABLET_DATA) {\n    options.push(<option key={tablet_model} value={tablet_model}>{TABLET_DATA[tablet_model].name}</option>);\n  }\n\n  return (\n    <div>\n      <label htmlFor=\"tablet-select\">Select your tablet: </label>\n      <select name=\"tablet\" id=\"tablet-select\" onChange={handleChange}>\n        {options}\n        <option value=\"custom\">Custom</option>\n      </select>\n\n      <BoundForm\n        data={tablet}\n        schema={{\n          w: {\n            min: 1,\n            label: \"width\",\n            disabled: model !== 'custom'\n          },\n          h: {\n            min: 1,\n            label: \"height\",\n            disabled: model !== 'custom'\n          },\n          pw: {\n            min: 1,\n            step: \"any\",\n            label: \"physical width (mm)\",\n            disabled: model !== 'custom'\n          },\n          ph: {\n            min: 1,\n            step: \"any\",\n            label: \"physical height (mm)\",\n            disabled: model !== 'custom'\n          }\n        }}\n        setter={setTablet}\n      />\n    </div>\n  );\n}\n\n// vim: ts=2:sw=2:et\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { DesktopDisplay, TabletDisplay } from './display';\nimport { TabletMath } from './math';\nimport { TabletSelector } from './tablets';\nimport { BoundForm } from './util';\n\nfunction ScreenshotSelector({setImage}) {\n  function handleChange(e) {\n    // generate blob URL\n    const url = window.URL.createObjectURL(e.target.files[0]);\n\n    // find width and height of image\n    let img = new Image();\n    img.src = url;\n    img.onload = () => {\n      setImage({image: url, w: img.width, h: img.height});\n    };\n  }\n\n  return (\n    <form>\n      <div>upload desktop screenshot</div>\n      <input type=\"file\" onChange={handleChange} />\n    </form>\n  );\n}\n\nfunction App() {\n  const [screen, setScreen] = useState({\n    image: 'http://192.168.0.3:8080/Pictures/Screenshots.phi/19-12-19_23-11-03.png',\n    w: 3840,\n    h: 1080\n  });\n  const [subscreen, setSubscreen] = useState({x: 2197, y: 165, w: 1366, h: 768});\n  const [subscreenImage, setSubscreenImage] = useState();\n  const [tablet, setTablet] = useState({w: 15200, h: 9500, pw: 152.0, ph: 95.0});\n  const [projection, setProjection] = useState({x: 0, y: 0, w: 15200, h: 9500});\n\n  return (\n    <div className=\"App\">\n      <details>\n        <summary>ScreenshotSelector</summary>\n        <ScreenshotSelector setImage={setScreen} />\n\n        <BoundForm\n          data={screen}\n          schema={{\n            image: 'ignore',\n            w: {\n              min: 1,\n              label: \"width\"\n            },\n            h: {\n              min: 1,\n              label: \"height\"\n            }\n          }}\n          setter={setScreen}\n        />\n      </details>\n\n      <hr />\n      <details>\n        <summary>DesktopDisplay</summary>\n        <DesktopDisplay\n          screen={screen}\n          subscreen={subscreen}\n          setSubscreen={setSubscreen}\n          subscreenImage={subscreenImage}\n          setSubscreenImage={setSubscreenImage}\n        />\n\n        <BoundForm\n          data={subscreen}\n          schema={{\n            x: {\n              min: 0,\n              max: screen.w\n            },\n            y: {\n              min: 0,\n              max: screen.h\n            },\n            w: {\n              min: 1,\n              max: screen.w,\n              label: \"width\"\n            },\n            h: {\n              min: 1,\n              max: screen.h,\n              label: \"height\"\n            }\n          }}\n          setter={setSubscreen}\n        />\n      </details>\n\n      <hr />\n      <details open>\n        <summary>TabletDisplay</summary>\n        <TabletSelector\n          tablet={tablet}\n          setTablet={setTablet}\n          projection={projection}\n          setProjection={setProjection}\n        />\n\n        <TabletDisplay\n          subscreenImage={subscreenImage}\n          tablet={tablet}\n          projection={projection}\n          setProjection={setProjection}\n        />\n\n        <BoundForm\n          data={projection}\n          schema={{\n            x: {\n              max: tablet.w\n            },\n            y: {\n              max: tablet.h\n            },\n            w: {\n              min: 1,\n              label: \"width\"\n            },\n            h: {\n              min: 1,\n              label: \"height\"\n            }\n          }}\n          setter={setProjection}\n        />\n      </details>\n\n      <hr />\n      <details open>\n        <summary>TabletMath</summary>\n        <TabletMath\n          screen={screen}\n          subscreen={subscreen}\n          tablet={tablet}\n          projection={projection}\n          setProjection={setProjection}\n        />\n      </details>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// vim: ts=2:sw=2:et\n"],"sourceRoot":""}